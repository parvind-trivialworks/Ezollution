@model EzollutionPro_BAL.Models.Masters.AirClientModel

@{
    ViewBag.Title = "AddUpdateClient";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm(FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="container">
        <section class="content">
            <!-- SELECT2 EXAMPLE -->
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Add/Update Client</h3>
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(z => z.iAirClientId)
                    <div class="row">
                        <div class="col-md-6 form-group">
                            @Html.LabelFor(model => model.sClientName, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.sClientName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.sClientName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6 form-group">
                            @Html.LabelFor(model => model.sPassword, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.sPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.sPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 form-group">
                            @Html.LabelFor(model => model.sCompanyName, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.sCompanyName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.sCompanyName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6 form-group">
                            @Html.LabelFor(model => model.sAddress, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.sAddress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.sAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 form-group">
                            @Html.LabelFor(model => model.sGSTNo, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.sGSTNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.sGSTNo, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6 form-group">
                            @Html.LabelFor(model => model.sCARNNo, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.sCARNNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.sCARNNo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 form-group">
                            @Html.LabelFor(model => model.sICEGateId, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.sICEGateId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.sICEGateId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6 form-group">
                            @Html.LabelFor(model => model.sPinCode, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.sPinCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.sPinCode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3 form-group">
                            @Html.LabelFor(model => model.sEmailId, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.sEmailId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.sEmailId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>Price/Unit</label>
                                @Html.TextBoxFor(z => z.dPricePerUnit, new { @class = "form-control" })
                                @Html.ValidationMessageFor(z => z.dPricePerUnit)
                            </div>
                        </div>
                        <div class="col-md-3">
                            <label claass="control-label ">State Name</label>
                            @Html.DropDownListFor(model => model.sStateCode, ViewBag.States as IEnumerable<SelectListItem>, "[ STATE ]", new { @class = "form-control " })
                            @Html.ValidationMessageFor(x => x.sStateCode)
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
}
<script src="/Scripts/jquery-3.3.1.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
     //   alert("@Model.sStateCode")
       //  $('#sStateCode').val("@Model.sStateCode");
    })

</script>